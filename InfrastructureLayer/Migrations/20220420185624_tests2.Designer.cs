// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValidataTask.Data;

namespace InfrastructureLayer.Migrations
{
    [DbContext(typeof(ValidataContext))]
    [Migration("20220420185624_tests2")]
    partial class tests2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ValidataTask.Entity.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Product")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ValidataTask.Entity.ValidataEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("OrderEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderEntityId");

                    b.HasIndex("OrderId");

                    b.ToTable("ValidataEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Test",
                            Date = new DateTime(2022, 4, 18, 21, 56, 23, 572, DateTimeKind.Local).AddTicks(2887),
                            LastName = "Ozbey",
                            Name = "Andriy",
                            Number = 3,
                            PostalCode = 123
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Test",
                            Date = new DateTime(2022, 4, 19, 21, 56, 23, 573, DateTimeKind.Local).AddTicks(3656),
                            LastName = "Ozbey",
                            Name = "Oyku",
                            Number = 3,
                            PostalCode = 123
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Test",
                            Date = new DateTime(2022, 4, 20, 21, 56, 23, 573, DateTimeKind.Local).AddTicks(3678),
                            LastName = "Ozbey",
                            Name = "Arif",
                            Number = 3,
                            PostalCode = 123
                        });
                });

            modelBuilder.Entity("ValidataTask.Entity.ValidataEntity", b =>
                {
                    b.HasOne("ValidataTask.Entity.OrderEntity", null)
                        .WithMany("Validata")
                        .HasForeignKey("OrderEntityId");

                    b.HasOne("ValidataTask.Entity.OrderEntity", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ValidataTask.Entity.OrderEntity", b =>
                {
                    b.Navigation("Validata");
                });
#pragma warning restore 612, 618
        }
    }
}
